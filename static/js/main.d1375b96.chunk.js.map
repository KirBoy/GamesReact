{"version":3,"sources":["components/Home.jsx","components/Witcher.jsx","components/Pytnashki/PytnashkiResult.jsx","components/Pytnashki/Pytnashki.jsx","redux/pytnashki-reducer.js","components/Pytnashki/PytnashkiCpntainer.jsx","components/Memory Game/MemoryResult.jsx","components/Memory Game/MemoryGame.jsx","redux/memoryGame-reducer.js","components/Memory Game/MemoryGameContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Home","className","to","Witcher","props","state","redirect","video","React","createRef","this","setState","current","volume","autoplay","ref","src","onClick","Component","PytnashkiResult","playAgain","initInner","Pytnashki","list","console","log","nextProps","nextState","nextContext","cards","pytnashki","map","el","i","filter","item","pos","length","reduce","previousValue","currentValue","j","undefined","childNodes","push","getAttribute","split","JSON","stringify","result","gameResult","e","position","nativeEvent","path","y","target","parentElement","x","inner","innerHTML","children","moveCard","classList","add","remove","error","prevProps","cardsInner","countDone","gameComplited","move","row","exact","Item","ItemPosition","key","alt","PLAY_AGAIN","GAME_DONE","INIT_INNER","MOVE_CARD","SET_GAME","initialState","pytnashkiReducer","action","type","sort","Math","random","forEach","a","Object","keys","connect","dispatch","MemoryResult","rebutGame","Card","card","MemoryGame","sec","min","couple","mistakes","bestTime","bestMistakes","timerID","setInterval","memoryGame","gameStarted","timer","every","active","parentNode","contains","firstEl","secondEl","number","audio","Audio","setTimeout","done","clearInterval","bind","flip","PLAY_AGAIN3434","GAME_COMPLITED","GAME_STARTED","memoryGameReducer","App","basename","process","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d1375b96.chunk.js","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter, NavLink} from \"react-router-dom\";\r\nimport './style.css'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n\r\n        <div className=\"main__inner\">\r\n            <h1 className=\"title\">Выбери игру</h1>\r\n            <ul className=\"list\">\r\n                <div className=\"choice\">\r\n                    <NavLink to={'/memorygame/'}>\r\n                        Найди пару\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"choice\">\r\n                    <NavLink to={'/pytnashki/'}>\r\n                        Пятнашки\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"choice\">\r\n                    <NavLink className='name' to={'/witcher/'}>\r\n                        Ведьмак 3\r\n                    </NavLink>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {createRef} from 'react'\r\nimport './style.css'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Witcher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.video = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        redirect: false\r\n    }\r\n\r\n    redirect() {\r\n        this.setState({redirect: true})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.video.current.volume = '0.2';\r\n        this.video.current.autoplay = true;\r\n    }\r\n\r\n    render() {\r\n        const {redirect} = this.state;\r\n        if (redirect) {\r\n            return <Redirect to='/'/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <video ref={this.video} className=\"video\" src=\"/video.mp4\" onClick={() => this.redirect()}>\r\n                </video>\r\n                <span className=\"sorry\">:))))))))</span> <span\r\n                className=\"notification\">Нажми на любое место чтобы выйти</span>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Witcher;","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst PytnashkiResult = (props) => {\r\n\r\n    const again = () => {\r\n        props.playAgain()\r\n        props.initInner()\r\n    }\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            <p className=\"result__text\">Ты прошел игру</p>\r\n            <div>\r\n                <button className=\"again\" onClick={() => again()}>Начать заново.</button>\r\n                <NavLink to={'/'}>\r\n                    home\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport  default  PytnashkiResult;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './../style.css'\r\n\r\nimport PytnashkiResult from \"./PytnashkiResult\";\r\n\r\nclass Pytnashki extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.list = React.createRef()\r\n        this.props.playAgain()\r\n        this.props.initInner()\r\n        console.log(this.props)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\r\n        let cards = nextProps.pytnashki.cards;\r\n        let mass = cards.map((el, i) => {\r\n            return cards.filter((item, pos) => {\r\n                return cards[i + 1 + pos] < el\r\n            }).length\r\n        })\r\n\r\n        if (mass.reduce((previousValue, currentValue) => previousValue + currentValue) % 2 !== 0) {\r\n            this.props.playAgain()\r\n            return true\r\n        }\r\n        return true\r\n    }\r\n\r\n    countDone() {\r\n        let cards = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < 4; j++) {\r\n                if (this.list.current.childNodes[i].childNodes[j].childNodes[0] === undefined) {\r\n                    cards.push('')\r\n                    continue\r\n                }\r\n                cards.push(+this.list.current.childNodes[i].childNodes[j].childNodes[0].getAttribute('src').split('.')[1])\r\n            }\r\n        }\r\n\r\n        if (JSON.stringify(cards) === JSON.stringify(this.props.pytnashki.result)) {\r\n            this.props.gameResult()\r\n        }\r\n\r\n    }\r\n\r\n    move(e) {\r\n        const position = e.nativeEvent.path\r\n        let y = e.target.parentElement.getAttribute('data-y')\r\n        let x = e.target.parentElement.getAttribute('data-x')\r\n        let inner = position[1].innerHTML.split('.')[1]\r\n        try {\r\n            if (position[3].children[y - 2].children[x - 1].innerHTML === '') {\r\n                this.props.moveCard({\r\n                    [y + '' + x]: null,\r\n                    [y - 1 + '' + x]: +inner\r\n                })\r\n                position[1].classList.add('last');\r\n                position[3].children[y - 2].children[x - 1].classList.remove('last');\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n        try {\r\n            if (position[3].children[y].children[x - 1].innerHTML === '') {\r\n                this.props.moveCard({\r\n                    [y + '' + x]: null,\r\n                    [(+y + 1) + '' + x]: +inner\r\n                })\r\n                position[1].classList.add('last');\r\n                position[3].children[y].children[x - 1].classList.remove('last');\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n        try {\r\n            if (position[2].children[x].innerHTML === '') {\r\n                this.props.moveCard({\r\n                    [y + '' + x]: null,\r\n                    [y + '' + (+x + 1)]: +inner\r\n                })\r\n                position[1].classList.add('last');\r\n                position[2].children[x].classList.remove('last');\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n        try {\r\n            if (position[2].children[x - 2].innerHTML === '') {\r\n                this.props.moveCard({\r\n                    [y + '' + x]: null,\r\n                    [y + '' + x - 1]: +inner\r\n                })\r\n                position[1].classList.add('last');\r\n                position[2].children[x - 2].classList.remove('last');\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (this.props.pytnashki.cardsInner !== prevProps.pytnashki.cardsInner) {\r\n            this.countDone()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>{this.props.pytnashki.gameComplited ?\r\n                <PytnashkiResult playAgain={this.props.playAgain} initInner={this.props.initInner}/> : null}\r\n                <ul className=\"list display-block\" ref={this.list} onClick={(e) => this.move(e)}>\r\n                    {this.props.pytnashki.row.map((el, i) => <Item key={i} y={el} row={this.props.pytnashki.row}\r\n                                                                   cardsInner={this.props.pytnashki.cardsInner}/>)}\r\n                </ul>\r\n                <NavLink className='home-main' exact to={'/'}>\r\n                    home\r\n                </NavLink>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst Item = (props) => {\r\n\r\n    return (\r\n        <li className=\"row\">\r\n            {props.row.map((el, i) => <ItemPosition key={i} y={props.y} x={el} cardsInner={props.cardsInner}/>)}\r\n        </li>\r\n    )\r\n}\r\n\r\nconst ItemPosition = (props) => {\r\n\r\n    let key = props.y + '' + props.x\r\n    let path = '/numbers/img.' + props.cardsInner[key] + '.png';\r\n    return (\r\n        <div className=\"number\" data-y={props.y} data-x={props.x}>\r\n            {props.cardsInner[key] && <img className=\"card\" src={path} data-y={props.y} data-x={props.x} alt={path}>\r\n            </img>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pytnashki;","const PLAY_AGAIN = 'PLAY_AGAIN';\r\nconst GAME_DONE = 'GAME_DONE';\r\nconst INIT_INNER = 'INIT_INNER';\r\nconst MOVE_CARD = 'MOVE_CARD';\r\nconst SET_GAME = 'SET_GAME';\r\n\r\nconst initialState = {\r\n    cards: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\r\n    row: [1, 2, 3, 4],\r\n    result: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, ''],\r\n    cardsInner: {\r\n        11: null,\r\n        12: null,\r\n        13: null,\r\n        14: null,\r\n        21: null,\r\n        22: null,\r\n        23: null,\r\n        24: null,\r\n        31: null,\r\n        32: null,\r\n        33: null,\r\n        34: null,\r\n        41: null,\r\n        42: null,\r\n        43: null,\r\n        44: null,\r\n    },\r\n    gameComplited: false\r\n};\r\n\r\nconst pytnashkiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case PLAY_AGAIN:\r\n            return {...state, cards: state.cards.sort(() => Math.random() - 0.5), gameComplited: false}\r\n\r\n        case SET_GAME:\r\n            return {...state, cards: state.cards.sort(() => Math.random() - 0.5), gameComplited: false}\r\n\r\n        case INIT_INNER:\r\n            let cardsInner = state.cardsInner\r\n\r\n            state.cards.forEach((el, i) => {\r\n                let a = i\r\n                let key = Object.keys(state.cardsInner)[a]\r\n                cardsInner[key] = el\r\n            })\r\n            return {...state, cardsInner: cardsInner}\r\n\r\n        case GAME_DONE:\r\n            return {...state, gameComplited: true}\r\n\r\n        case MOVE_CARD:\r\n            return {...state, cardsInner: {...state.cardsInner, ...action.cards}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const playAgain = () => ({type: PLAY_AGAIN});\r\nexport const setGAME = () => ({type: SET_GAME});\r\nexport const initInner = () => ({type: INIT_INNER});\r\nexport const moveCard = (cards) => ({type: MOVE_CARD, cards});\r\nexport const gameResult = () => ({type: GAME_DONE});\r\n\r\nexport default pytnashkiReducer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Pytnashki from \"./Pytnashki\";\r\nimport {gameResult, initInner, moveCard, playAgain} from \"../../redux/pytnashki-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        pytnashki: state.pytnashki,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        playAgain: () => {\r\n            dispatch(playAgain());\r\n        },\r\n        gameResult: () => {\r\n            dispatch(gameResult())\r\n        },\r\n        initInner: () => {\r\n            dispatch(initInner())\r\n        },\r\n        moveCard: (cards) => {\r\n            dispatch(moveCard(cards))\r\n        }\r\n    })\r\n}\r\n\r\nconst PytnashkiContainer = (props) => {\r\n    return (\r\n        <Pytnashki pytnashki={props.pytnashki} playAgain={props.playAgain} gameResult={props.gameResult}\r\n                   initInner={props.initInner} moveCard={props.moveCard}/>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PytnashkiContainer);\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport '../style.css'\r\n\r\nconst MemoryResult = (props) => {\r\n\r\n\r\n    const again = () => {\r\n        props.playAgain()\r\n        props.rebutGame()\r\n    }\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            <p className=\"result__text\">Ты прошел игру</p>\r\n            <div>\r\n                <button className=\"again\" onClick={() => again()}>Начать заново.</button>\r\n                <NavLink to={'/'}>\r\n                    home\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MemoryResult;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport '../style.css'\r\nimport MemoryResult from \"./MemoryResult\";\r\n\r\nclass MemoryGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.list = React.createRef();\r\n        this.props.playAgain()\r\n    }\r\n\r\n    state = {\r\n        sec: 0,\r\n        min: 0,\r\n        cards: [],\r\n        couple: [],\r\n        mistakes: 0,\r\n        bestTime: null,\r\n        bestMistakes: null,\r\n    }\r\n\r\n    timer() {\r\n        this.timerID = setInterval(() => {\r\n            if (this.state.sec === 59) {\r\n                this.setState({\r\n                    sec: 0,\r\n                    min: this.state.min + 1\r\n                })\r\n            }\r\n            this.setState({\r\n                sec: this.state.sec + 1\r\n            })\r\n        }, 1000)\r\n\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\r\n        if (nextProps.memoryGame.gameComplited) {\r\n            if (this.state.bestMistakes === null || this.state.bestMistakes > this.state.mistakes && this.state.bestTime[0] * 60 + this.state.bestTime[1] > this.state.min * 60 + this.state.sec) {\r\n                this.setState({\r\n                    bestTime: [this.state.min, this.state.sec],\r\n                    bestMistakes: this.state.mistakes,\r\n                })\r\n            }\r\n            console.log(this.state)\r\n            return true\r\n        } else if (!nextProps.memoryGame.gameStarted) {\r\n\r\n            nextProps.gameStarted()\r\n            this.timer()\r\n            return true\r\n        } else if (this.state !== nextState) {\r\n            return true\r\n        } else if (this.props !== nextProps) {\r\n            this.setState({\r\n                sec: 0,\r\n                min: 0,\r\n                cards: [],\r\n                couple: [],\r\n                mistakes: 0,\r\n                timer: true\r\n            })\r\n\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    flip(e) {\r\n        if (e.target.className === 'front') {\r\n            let inner = e.target.parentElement.childNodes[1].innerHTML\r\n\r\n            if (this.state.cards.every(el => el[0] !== e.target)) {\r\n                this.setState({\r\n                    cards: [...this.state.cards, [e.target, inner]]\r\n                })\r\n            }\r\n\r\n            this.state.cards.forEach((el) => {\r\n\r\n                if (el[1] === inner && el[0] !== e.target) {\r\n                    this.setState({\r\n                        couple: [...this.state.couple, inner]\r\n                    })\r\n                }\r\n            })\r\n\r\n            let active = [];\r\n\r\n            for (let i = 0; i < 16; i++) {\r\n                if (e.target.parentNode.parentNode.parentNode.childNodes[i].childNodes[0].classList.contains('active')) {\r\n                    active.push(i)\r\n                }\r\n            }\r\n\r\n            if (active.length === 1 || active.length === 0) {\r\n                e.target.parentNode.classList.add(('active'))\r\n                active = []\r\n                for (let i = 0; i < 16; i++) {\r\n                    if (e.target.parentNode.parentNode.parentNode.childNodes[i].childNodes[0].classList.contains('active')) {\r\n                        active.push(i)\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (active.length === 2) {\r\n                let firstEl = e.target.parentNode.parentNode.parentNode.childNodes[active[0]].childNodes[0].childNodes[1];\r\n                let secondEl = e.target.parentNode.parentNode.parentNode.childNodes[active[1]].childNodes[0].childNodes[1];\r\n                if (firstEl.innerHTML === secondEl.innerHTML) {\r\n                    let number = firstEl.childNodes[0].getAttribute('data-number');\r\n                    let audio = new Audio();\r\n                    audio.volume = 0.5;\r\n                    audio.src = `/audio/${number}.mp3`;\r\n                    audio.autoplay = true;\r\n                    e.target.parentNode.parentNode.parentNode.childNodes[active[0]].childNodes[0].classList.add('done')\r\n                    e.target.parentNode.parentNode.parentNode.childNodes[active[0]].childNodes[0].classList.remove('active')\r\n                    e.target.parentNode.parentNode.parentNode.childNodes[active[1]].childNodes[0].classList.add('done')\r\n                    e.target.parentNode.parentNode.parentNode.childNodes[active[1]].childNodes[0].classList.remove('active')\r\n\r\n                } else {\r\n\r\n                    this.state.couple.forEach((el) => {\r\n                        if (el === firstEl.innerHTML || el === secondEl.innerHTML) {\r\n                            this.setState({\r\n                                mistakes: this.state.mistakes + 1\r\n                            })\r\n                        }\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        e.target.parentNode.parentNode.parentNode.childNodes[active[0]].childNodes[0].classList.remove('active')\r\n                        e.target.parentNode.parentNode.parentNode.childNodes[active[1]].childNodes[0].classList.remove('active')\r\n\r\n                    }, 800)\r\n                }\r\n            }\r\n            this.countDone(e)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    countDone(e) {\r\n        let done = 0;\r\n        for (let i = 0; i < 16; i++) {\r\n            if (e.target.parentNode.parentNode.parentNode.childNodes[i].childNodes[0].classList.contains('done')) {\r\n                done++\r\n            }\r\n        }\r\n\r\n        if (done === 16) {\r\n            this.props.gameResult()\r\n            this.setState({\r\n                timer: false\r\n            })\r\n            clearInterval(this.timerID)\r\n        }\r\n    }\r\n\r\n    rebutGame() {\r\n        this.list.current.childNodes.forEach((el) => el.childNodes[0].className = 'flipper')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.gameStarted()\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"time\">\r\n                    <span>Время</span>\r\n                    <span>{this.state.min}:</span><span>{this.state.sec < 10 ? '0' + this.state.sec : this.state.sec}</span>\r\n                </div>\r\n                {this.props.memoryGame.gameComplited ?\r\n                    <MemoryResult playAgain={this.props.playAgain} rebutGame={this.rebutGame.bind(this)}/> : null}\r\n                <ul className=\"list list--game\" ref={this.list} onClick={(e) => this.flip(e)}>\r\n                    {this.props.memoryGame.card.map((el, i) => <Card key={i} card={el}/>)}\r\n                </ul>\r\n                <div className=\"mistakes\">\r\n                    <span>Ошибки</span>\r\n                    <span> {this.state.mistakes}</span>\r\n                </div>\r\n                <div>\r\n                    <span>{this.state.bestTime}</span>\r\n                    <span> {this.state.bestMistakes}</span>\r\n                </div>\r\n                <NavLink className='home-main' exact to={'/'}>\r\n                    home\r\n                </NavLink>\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nfunction\r\n\r\nCard(props) {\r\n\r\n    let path = '/cards/' + props.card + '.png';\r\n\r\n    return (\r\n        <div className=\"item\">\r\n            <div className='flipper'>\r\n                <div className=\"front\">\r\n                </div>\r\n                <div className=\"back\">\r\n                    <img className=\"card\" data-number={props.card} src={path} alt=\"\">\r\n                    </img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoryGame;","const PLAY_AGAIN3434 = 'PLAY_AGAIN3434';\r\nconst GAME_COMPLITED = 'GAME__COMPLITED';\r\nconst GAME_STARTED = 'GAME__STARTED';\r\n\r\nconst initialState = {\r\n    card: [3, 2, 7, 4, 3, 6, 1, 5, 4, 1, 7, 2, 8, 8, 6, 5].sort(() => Math.random() - 0.5),\r\n    gameComplited: false,\r\n    gameStarted: false\r\n};\r\n\r\n\r\nconst memoryGameReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case PLAY_AGAIN3434:\r\n            return {...state, card: state.card.sort(() => Math.random() - 0.5), gameComplited: false}\r\n\r\n        case GAME_COMPLITED:\r\n            return {...state, gameComplited: true, gameStarted: false}\r\n\r\n        case GAME_STARTED:\r\n            return {...state, gameStarted: !state.gameStarted}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const playAgain = () => ({type: PLAY_AGAIN3434});\r\nexport const gameResult = () => ({type: GAME_COMPLITED});\r\nexport const gameStarted = () => ({type: GAME_STARTED});\r\n\r\nexport default memoryGameReducer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MemoryGame from \"./MemoryGame\";\r\nimport {gameResult, gameStarted, playAgain} from \"../../redux/memoryGame-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        memoryGame: state.memoryGame,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        playAgain: () => {\r\n            dispatch(playAgain());\r\n        },\r\n        gameResult: () => {\r\n            dispatch(gameResult());\r\n        },\r\n        gameStarted: () => {\r\n            dispatch(gameStarted());\r\n        }\r\n    })\r\n}\r\n\r\nconst MemoryGameContainer = (props) => {\r\n\r\n    return (\r\n        <MemoryGame memoryGame={props.memoryGame} playAgain={props.playAgain} gameResult={props.gameResult} gameStarted={props.gameStarted}/>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryGameContainer);\r\n","import './App.css';\nimport React from 'react'\nimport {BrowserRouter, NavLink, Route} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Witcher from \"./components/Witcher\";\nimport './components/style.css'\nimport PytnashkiContainer from \"./components/Pytnashki/PytnashkiCpntainer\";\nimport MemoryGameContainer from \"./components/Memory Game/MemoryGameContainer\";\n\nfunction App() {\n    return (\n        <div className=\"main\">\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Route path='/memorygame/' render={() => <MemoryGameContainer/>}/>\n                <Route exact path='/' render={()=> <Home/>}/>\n                <Route  path='/pytnashki/' render={()=> <PytnashkiContainer/>}/>\n                <Route  path='/witcher/' render={()=> <Witcher/>}/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import memoryGameReducer from \"./memoryGame-reducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport pytnashkiReducer from \"./pytnashki-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    memoryGame: memoryGameReducer,\r\n    pytnashki: pytnashkiReducer,\r\n})\r\n\r\nlet store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}